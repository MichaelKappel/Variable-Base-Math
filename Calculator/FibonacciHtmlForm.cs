using Common.Interfaces;
using Common.Models;
using FileRepositories;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using VariableBase.Mathematics;

namespace Calculator
{
    public partial class FibonacciHtmlForm : Form
    {
        List<FibonacciModel<Number>> FibonacciModels = new List<FibonacciModel<Number>>();

        public Int32 FirstNumberCount = 0;
        public Int32 SecondNumberCount = 1;

        public static String ApplyFibonacciHtmlTemplate(Int32 FibonacciIndex, String p2, String p3, String p5, String p6, String p8, String p10, String p16, String p36, String p63404)
        {
            return String.Format(@"
                    <!DOCTYPE html>
                    <html>
                    <head>
                        <meta charset=""utf-8"" />
                        <meta name=""google"" content=""notranslate"" />
                        <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
                        <title>Fibonacci Sequence Index {0}</title>
                        <link rel=""stylesheet"" href=""https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"" />
                        <meta name=""x-stylesheet-fallback-test"" content="""" class=""sr-only"" /><script>!function(a,b,c,d){{var e,f=document,g=f.getElementsByTagName(""SCRIPT""),h=g[g.length-1].previousElementSibling,i=f.defaultView&&f.defaultView.getComputedStyle?f.defaultView.getComputedStyle(h):h.currentStyle;if(i&&i[a]!==b)for(e=0;e<c.length;e++)f.write('<link href=""'+c[e]+'"" '+d+""/>"")}}(""position"",""absolute"",[""\/lib\/bootstrap\/dist\/css\/bootstrap.min.css""], ""rel=\u0022stylesheet\u0022 "");</script>
                        <link rel=""stylesheet"" href=""/css/site.min.css"" />
                    </head>
                    <body>
                        <nav class=""navbar navbar-inverse navbar-fixed-top"">
                            <div class=""container"">
                                <div class=""navbar-header"">
                                    <button type=""button"" class=""navbar-toggle"" data-toggle=""collapse"" data-target="".navbar-collapse"">
                                        <span class=""sr-only"">Toggle navigation</span>
                                        <span class=""icon-bar""></span>
                                        <span class=""icon-bar""></span>
                                        <span class=""icon-bar""></span>
                                    </button>
                                    <a class=""navbar-brand"" href=""/"">Protocol5</a>
                                </div>
                                <div class=""navbar-collapse collapse"">
                                    <ul class=""nav navbar-nav"">
                                        <li><a href=""/Fibonacci"">Fibonacci Sequence</a></li>
                                        <li><a href=""/Prime"">Prime Numbers</a></li>
                                        <li><a href=""/Calculator"">Precision Calculator</a></li>
                                        <li><a href=""/Home/About"">About</a></li>
                                        <li><a href=""/Home/Links"">Links</a></li>
                                        <li><a href=""/Home/Contact"">Contact</a></li>
                                    </ul>
                                </div>
                            </div>
                        </nav>
        
                        <div>
                            <h2>
                                Fibonacci Number Index {0}
                            </h2>
                            <ul class=""number-result"">
                                <li><h4>Binary  Base 2:</h4><div>{1}</div></li>
                                <li><h4>Ternary  Base 3:</h4><div>{2}</div></li>
                                <li><h4>Quinary  Base 5:</h4><div>{3}</div></li>
                                <li><h4>Senary  Base 6:</h4><div>{4}</div></li>
                                <li><h4>Octal  Base 8:</h4><div>{5}</div></li>
                                <li><h4>Decimal  Base 10:</h4><div>{6}</div></li>
                                <li><h4>Hexadecimal Radix 16:</h4><div>{7}</div></li>
                                <li><h4>Hexatridecimal  Radix 36:</h4><div>{8}</div></li>
                                <li><h4>Radix 63404:</h4><div>{9}</div></li>
                            </ul>
                        </div>
                    <div>
                        <a href=""/Fibonacci/{10}.htm""> &lt;&lt; Previous </a> | Fibonacci Sequence Index {0}  | <a href=""/Fibonacci/{11}.htm"">Next &gt;&gt;</a>
                    </div>
                    <hr />
                    <footer>
                            Generated by <a href=""http://MichaelKappel.com"">Michael Kappel, MCPD</a> on {12}
                    </footer>

                    <script src=""https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.3.1.min.js"" crossorigin=""anonymous"" integrity=""sha384-tsQFqpEReu7ZLhBV2VZlAu7zcOV+rXbYlF2cqB8txI/8aZajjp4Bqd+V6D5IgvKT"">
                    </script>
                    <script>(window.jQuery||document.write(""\u003Cscript src=\u0022\/lib\/jquery\/dist\/jquery.min.js\u0022 crossorigin=\u0022anonymous\u0022 integrity=\u0022sha384-tsQFqpEReu7ZLhBV2VZlAu7zcOV\u002BrXbYlF2cqB8txI\/8aZajjp4Bqd\u002BV6D5IgvKT\u0022\u003E\u003C\/script\u003E""));</script>
                            <script src=""https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/bootstrap.min.js"" crossorigin=""anonymous"" integrity=""sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"">
                            </script>
                    <script>(window.jQuery && window.jQuery.fn && window.jQuery.fn.modal||document.write(""\u003Cscript src=\u0022\/lib\/bootstrap\/dist\/js\/bootstrap.min.js\u0022 crossorigin=\u0022anonymous\u0022 integrity=\u0022sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\u0022\u003E\u003C\/script\u003E""));</script>
                            <script src=""/js/site.min.js""></script>
                    </body>
                    </html>
                    ", FibonacciIndex, p2, p3, p5, p6, p8, p10, p16, p36, WebUtility.HtmlEncode(p63404), FibonacciIndex - 1000, FibonacciIndex + 1000, DateTime.Now.ToShortDateString());
        }


        public FibonacciHtmlForm()
        {
            InitializeComponent();
        }

        private void Start_Click(object sender, EventArgs e)
        {
            Number.StorageRepository = new FileStorageRepository();
            var b2 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment("01")
            };
            this.FibonacciModels.Add(b2);

            var b3 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment("012")
            };
            this.FibonacciModels.Add(b3);

            var b5 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment("01234")
            };
            this.FibonacciModels.Add(b5);

            var b6 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment("012345")
            };
            this.FibonacciModels.Add(b6);

            var b8 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment("01234567")
            };
            this.FibonacciModels.Add(b8);

            var b10 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment("0123456789")
            };
            this.FibonacciModels.Add(b10);

            var b16 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment("0123456789abcdef")
            };
            this.FibonacciModels.Add(b16);

            var b36 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment("0123456789abcdefghijklmnopqrstuvwxyz")
            };
            this.FibonacciModels.Add(b36);

            var b63404 = new FibonacciModel<Number>()
            {
                MathEnvironment = new CharMathEnvironment(true, true, true, true, true, true, false, false, false, false)
            };
            this.FibonacciModels.Add(b63404);


            Int32 startingNumber;
            if (Int32.TryParse(this.txtNumberSequence.Text, out startingNumber))
            {
                this.FirstNumberCount = startingNumber;
                this.SecondNumberCount = (startingNumber + 1);

                foreach (FibonacciModel<Number> fibonacciModel in this.FibonacciModels)
                {
                    fibonacciModel.First = fibonacciModel.MathEnvironment.OpenNumberFile(@"..\..\..\..\Fibonaccis-1", this.FirstNumberCount + ".p" + fibonacciModel.MathEnvironment.Base);
                    fibonacciModel.Second = fibonacciModel.MathEnvironment.OpenNumberFile(@"..\..\..\..\Fibonaccis-1", this.SecondNumberCount + ".p" + fibonacciModel.MathEnvironment.Base);
                }
            }
            else
            {
                b2.First = b2.MathEnvironment.GetNumber(0);
                b2.Second = b2.MathEnvironment.GetNumber(1);
                b3.First = b3.MathEnvironment.GetNumber(0);
                b3.Second = b3.MathEnvironment.GetNumber(1);
                b5.First = b5.MathEnvironment.GetNumber(0);
                b5.Second = b5.MathEnvironment.GetNumber(1);
                b6.First = b6.MathEnvironment.GetNumber(0);
                b6.Second = b6.MathEnvironment.GetNumber(1);
                b8.First = b8.MathEnvironment.GetNumber(0);
                b8.Second = b8.MathEnvironment.GetNumber(1);
                b10.First = b10.MathEnvironment.GetNumber(0);
                b10.Second = b10.MathEnvironment.GetNumber(1);
                b16.First = b16.MathEnvironment.GetNumber(0);
                b16.Second = b16.MathEnvironment.GetNumber(1);
                b36.First = b36.MathEnvironment.GetNumber(0);
                b36.Second = b36.MathEnvironment.GetNumber(1);
                b63404.First = b63404.MathEnvironment.GetNumber(0);
                b63404.Second = b63404.MathEnvironment.GetNumber(1);
            }

            this.bwProcess.RunWorkerAsync();
        }

        public void NextNumber()
        {
            this.FirstNumberCount += 1;
            this.SecondNumberCount += 1;

            this.Invoke(new MethodInvoker(() =>
            {
                this.lblFirstNumberCount.Text = this.FirstNumberCount.ToString();
                this.lblSecondNumberCount.Text = this.SecondNumberCount.ToString();
            }));


            Parallel.ForEach<FibonacciModel<Number>>(this.FibonacciModels, (FibonacciModel<Number> fibonacciModel) => {
                fibonacciModel.StartDate = DateTime.Now;
                Number fibonacciNext = fibonacciModel.First + fibonacciModel.Second;

                fibonacciModel.First = fibonacciModel.Second;
                fibonacciModel.Second = fibonacciNext;
            });


            if (this.FirstNumberCount % 1000 == 0)
            {

                this.Invoke(new MethodInvoker(() =>
                {
                    Number.StorageRepository.Create(@"..\..\..\..\Fibonacci\", this.FirstNumberCount.ToString() + ".htm",
                            ApplyFibonacciHtmlTemplate(this.FirstNumberCount,
                                this.FibonacciModels[0].First.GetCharArray(), this.FibonacciModels[1].First.GetCharArray(), this.FibonacciModels[2].First.GetCharArray(),
                                this.FibonacciModels[3].First.GetCharArray(), this.FibonacciModels[4].First.GetCharArray(), this.FibonacciModels[5].First.GetCharArray(),
                                this.FibonacciModels[6].First.GetCharArray(), this.FibonacciModels[7].First.GetCharArray(), this.FibonacciModels[8].First.GetCharArray()
                            ));

                    Number.StorageRepository.Create(@"..\..\..\..\Fibonacci\", this.SecondNumberCount.ToString() + ".htm",
                            ApplyFibonacciHtmlTemplate(this.SecondNumberCount,
                                this.FibonacciModels[0].Second.GetCharArray(), this.FibonacciModels[1].Second.GetCharArray(), this.FibonacciModels[2].Second.GetCharArray(),
                                this.FibonacciModels[3].Second.GetCharArray(), this.FibonacciModels[4].Second.GetCharArray(), this.FibonacciModels[5].Second.GetCharArray(),
                                this.FibonacciModels[6].Second.GetCharArray(), this.FibonacciModels[7].Second.GetCharArray(), this.FibonacciModels[8].Second.GetCharArray()
                            ));
                }));
            }

            if (this.FirstNumberCount % 10000 == 0)
            {
                Parallel.ForEach<FibonacciModel<Number>>(this.FibonacciModels, (FibonacciModel<Number> fibonacciModel) =>
                {
                    Number fibonacciNext = fibonacciModel.First + fibonacciModel.Second;

                    fibonacciModel.First.SaveFile(@"..\..\..\..\Fibonaccis\", this.FirstNumberCount.ToString() + ".p" + fibonacciModel.MathEnvironment.Base);
                    fibonacciModel.Second.SaveFile(@"..\..\..\..\Fibonaccis\", this.SecondNumberCount.ToString() + ".p" + fibonacciModel.MathEnvironment.Base);
                });
            }
        }

        private void BwProcess_DoWork(object sender, System.ComponentModel.DoWorkEventArgs e)
        {
            this.NextNumber();
        }

        private void BwProcess_RunWorkerCompleted(object sender, System.ComponentModel.RunWorkerCompletedEventArgs e)
        {

            this.bwProcess.RunWorkerAsync();
        }
    }
}
